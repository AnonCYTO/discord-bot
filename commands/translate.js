const { SlashCommandBuilder, EmbedBuilder } = require('discord.js');
const axios = require('axios');
const languagesFlags = {
  af: "ğŸ‡¿ğŸ‡¦ - Afrikaans",
  sq: "ğŸ‡¦ğŸ‡± - Albanian",
  am: "ğŸ‡ªğŸ‡¹ - Amharic",
  ar: "ğŸ‡¸ğŸ‡¦ - Arabic",
  hy: "ğŸ‡¦ğŸ‡² - Armenian",
  az: "ğŸ‡¦ğŸ‡¿ - Azerbaijani",
  be: "ğŸ‡§ğŸ‡¾ - Belarusian",
  bn: "ğŸ‡§ğŸ‡© - Bengali",
  bs: "ğŸ‡§ğŸ‡¦ - Bosnian",
  bg: "ğŸ‡§ğŸ‡¬ - Bulgarian",
  ceb: "ğŸ‡µğŸ‡­ - Cebuano",
  ny: "ğŸ‡²ğŸ‡¼ - Chichewa",
  "zh-cn": "ğŸ‡¨ğŸ‡³ - Chinese",
  "zh-tw": "ğŸ‡¹ğŸ‡¼ - Taiwanese Mandarin",
  hr: "ğŸ‡­ğŸ‡· - Croatian",
  cs: "ğŸ‡¨ğŸ‡¿ - Czech",
  da: "ğŸ‡©ğŸ‡° - Danish",
  nl: "ğŸ‡³ğŸ‡± - Dutch",
  en: "ğŸ‡ºğŸ‡¸ - English",
  et: "ğŸ‡ªğŸ‡ª - Estonian",
  tl: "ğŸ‡µğŸ‡­ - Tagalog",
  fil: ":flag_ph: - Filipino",
  fi: "ğŸ‡«ğŸ‡® - Finnish",
  fr: "ğŸ‡«ğŸ‡· - French",
  ka: "ğŸ‡¬ğŸ‡ª - Georgian",
  de: "ğŸ‡©ğŸ‡ª - German",
  el: "ğŸ‡¬ğŸ‡· - Greek (modern)",
  ht: "ğŸ‡­ğŸ‡¹ - Haitian",
  ha: "ğŸ‡³ğŸ‡¬ - Hausan",
  iw: "ğŸ‡®ğŸ‡± - Hebrew",
  hi: "ğŸ‡®ğŸ‡³ - Hindi",
  hmn: "ğŸ‡¨ğŸ‡³ - Hmong",
  hu: "ğŸ‡­ğŸ‡º - Hungarian",
  is: "ğŸ‡®ğŸ‡¸ - Icelandic",
  id: "ğŸ‡®ğŸ‡© - Indonesian",
  ga: "ğŸ‡®ğŸ‡ª - Irish",
  it: "ğŸ‡®ğŸ‡¹ - Italian",
  ja: "ğŸ‡¯ğŸ‡µ - Japanese",
  jw: "ğŸ‡®ğŸ‡© - Javanese",
  kk: "ğŸ‡°ğŸ‡¿ - Kazakh",
  km: "ğŸ‡°ğŸ‡­ - Khmer",
  ko: "ğŸ‡°ğŸ‡· - Korean",
  ku: "ğŸ‡®ğŸ‡· - Kurdish",
  ky: "ğŸ‡°ğŸ‡¬ - Kyrgyz",
  lo: "ğŸ‡±ğŸ‡¦ - Lao",
  la: "ğŸ‡»ğŸ‡¦ - Latin",
  lv: "ğŸ‡±ğŸ‡» - Latvian",
  lt: "ğŸ‡±ğŸ‡¹ - Lithuanian",
  lb: "ğŸ‡±ğŸ‡º - Luxembourgish/Letzeburgesch",
  mk: "ğŸ‡²ğŸ‡° - Macedonian",
  mg: "ğŸ‡²ğŸ‡¬ - Madagascar",
  ms: "ğŸ‡²ğŸ‡¾ - Malay",
  ml: "ğŸ‡®ğŸ‡³ - Malayalam",
  mt: "ğŸ‡²ğŸ‡¹ - Maltese",
  mi: "ğŸ‡³ğŸ‡¿ - Maori",
  mr: "ğŸ‡®ğŸ‡³ - Marathi",
  mn: "ğŸ‡²ğŸ‡³ - Mongolian",
  my: "ğŸ‡²ğŸ‡² - Burmese",
  ne: "ğŸ‡³ğŸ‡µ - Nepali",
  no: "ğŸ‡³ğŸ‡´ - Norwegian",
  ps: "ğŸ‡¦ğŸ‡« - Pashto",
  fa: "ğŸ‡®ğŸ‡· - Persian",
  pl: "ğŸ‡µğŸ‡± - Polish",
  pt: "ğŸ‡µğŸ‡¹ - Portuguese",
  pa: "ğŸ‡®ğŸ‡³ - Punjabi",
  ro: "ğŸ‡·ğŸ‡´ - Romanian",
  ru: "ğŸ‡·ğŸ‡º - Russian",
  sm: "ğŸ‡¼ğŸ‡¸ - Samoan",
  sr: "ğŸ‡·ğŸ‡¸ - Serbian",
  st: "ğŸ‡¿ğŸ‡¦ - Southern Sotho",
  sn: "ğŸ‡¿ğŸ‡¼ - Shona",
  si: "ğŸ‡±ğŸ‡° - Sinhalese",
  sk: "ğŸ‡¸ğŸ‡° - Slovak",
  sl: "ğŸ‡¸ğŸ‡® - Slovenian",
  so: "ğŸ‡¸ğŸ‡´ - Somali",
  es: "ğŸ‡ªğŸ‡¸ - Spanish",
  sw: "ğŸ‡°ğŸ‡ª - Swahili",
  sv: "ğŸ‡¸ğŸ‡ª - Swedish",
  tg: "ğŸ‡¹ğŸ‡¯ - Tajik",
  ta: "ğŸ‡®ğŸ‡³ - Tamil",
  te: "ğŸ‡®ğŸ‡³ - Telugu",
  th: "ğŸ‡¹ğŸ‡­ - Thai",
  tr: "ğŸ‡¹ğŸ‡· - Turkish",
  uk: "ğŸ‡ºğŸ‡¦ - Ukranian",
  ur: "ğŸ‡µğŸ‡° - Urdu",
  uz: "ğŸ‡ºğŸ‡¿ - Uzbek",
  vi: "ğŸ‡»ğŸ‡³ - Vietnamese",
  cy: "ğŸ‡¬ğŸ‡§ - Welsh",
  xh: "ğŸ‡¿ğŸ‡¦ - Xhosa",
  yi: "ğŸ‡®ğŸ‡± - Yiddish",
  yo: "ğŸ‡³ğŸ‡¬ - Yoruba",
  zu: "ğŸ‡¿ğŸ‡¦ - Zulu",
};
module.exports = {
  description: 'Translate a word, sentence, whatever',
  usage: '</translate:0> **<language (to translate to, type: string, choices list)>** **<text (to translate, type: string)>**',
  hidden: false,
  data: new SlashCommandBuilder()
    .setName("translate")
    .setDescription("Translate words")
    .addStringOption(option =>
      option.setName("language").setDescription("Language to translate to").setRequired(true).addChoices(
        { name: 'English', value: 'en' },
        { name: 'Filipino', value: 'fil' },
        { name: 'Portuguese', value: 'pt' },
        { name: 'Arabic', value: 'ar' },
        { name: 'French', value: 'fr' },
        { name: 'Japanese', value: 'ja' },
        { name: 'Chinese', value: 'zh-cn' },
        { name: 'Taiwanese Mandarin', value: 'zh-tw' },
        { name: 'Thai', value: 'th' },
        { name: 'Vietnamese', value: 'vi' },
        { name: 'Indonesian', value: 'id' },
        { name: 'Javanese', value: 'jw' },
        { name: 'Hebrew', value: 'iw' }
      ))
    .addStringOption(option =>
      option.setName("text").setDescription("Text to translate").setRequired(true)),
  async execute(i) {
    const textToTranslate = i.options.getString("text")
    const language = i.options.getString("language")
    const text = await axios.get("https://translate.googleapis.com/translate_a/single?client=gtx&sl=auto&tl=" + language + "&dt=t&dj=1&source=input&q=" + textToTranslate)
    const translated = text.data.sentences[0].trans;
    const srclang = text.data.src;
    const lgf = languagesFlags[srclang] || "<:thefeke138Idk:1036202813530837003> Unknown language";
    const lgc = languagesFlags[language] || "<:thefeke138Idk:1036202813530837003> Unknown language";
    const log = require('../util/log');
    if (!translated) return i.reply("no translation found");
    log("CMD-LOG", `${i.user.username} translated text: ${textToTranslate} to language ${language} and got result ${translated}`)
    const embed = new EmbedBuilder()
      .setTitle("Translate")
      .addFields({
        name: 'Text to translate',
        value: textToTranslate
      })
      .addFields({
        name: 'Result',
        value: translated
      })
      .addFields({
        name: 'Language (language code)',
        value: `${lgf} (Translate to ${lgc})`
      })
      .setFooter({
        text: `Requested by ${i.user.username}`,
        iconURL: i.user.displayAvatarURL(),
      })
      .setColor(require('../config.json').sobColor)
    return i.reply({ embeds: [embed] })
  }
}
